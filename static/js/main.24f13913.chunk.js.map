{"version":3,"sources":["componentes/inicio/Header.js","componentes/inicio/Categoria.js","componentes/inicio/Post.js","componentes/inicio/ContenedorPosts.js","componentes/inicio/Inicio.js","componentes/ver-post/Header.js","componentes/ver-post/ContenidoPost.js","componentes/ver-post/MostrarPost.js","componentes/crear-post/Header.js","componentes/crear-post/ContenidoPost.js","componentes/crear-post/CrearPost.js","componentes/editar-post/Header.js","componentes/editar-post/ContenidoPost.js","componentes/editar-post/EditarPost.js","componentes/footer/Footer.js","componentes/Router.js","App.js","serviceWorker.js","index.js"],"names":["Header","Fragment","className","to","Categoria","Post","this","props","post","titulo","contenido","_id","index","id","onClick","mostrarPost","borrarPost","Component","ContenedorPosts","posts","Object","keys","map","res","key","Inicio","tareas","ContenidoPost","verPost","MostrarPost","tituloRef","React","createRef","contenidoRef","state","mensaje","crearTarea","e","preventDefault","current","value","setState","setTimeout","crearPost","onSubmit","type","ref","name","placeholder","CrearPost","editarTarea","editarPost","defaultValue","EditarPost","Footer","Router","obtenerPosts","axios","get","then","data","catch","error","console","log","ok","Swal","fire","position","title","showConfirmButton","timer","put","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","delete","filter","localStorage","setItem","JSON","stringify","getItem","parse","exact","path","render","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24f13913.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n\r\n        <React.Fragment>\r\n\r\n            <div className=\"row my-3 justify-content-between d-flex\">\r\n                <h2 className=\"col-md-9 text-center\">Listado de Cosas por Hacer</h2>\r\n                <div className=\"col-12 col-md-3 text-right\">\r\n                    <Link to={'/crear-tarea'} className=\"col-5 col-md-12 btn btn-success\">Crear Tarea +</Link>\r\n                </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Categoria = () => {\r\n    return (\r\n        <div className=\"row categoria\">\r\n\r\n            <p className=\"col-2 text-center m-0\">ID</p>\r\n            <p className=\"col-6 text-center m-0\">Tarea por hacer</p>\r\n            <p className=\"col-4 text-center m-0\">Opciones</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Categoria;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Post extends Component {\r\n\r\n    render() {\r\n        const { titulo, contenido, _id } = this.props.post;\r\n        const index = this.props.id;\r\n        return (\r\n            <div className=\"post justify-content-between d-flex mb-2 p-1\">\r\n                <p className=\"col-2\">{index+1}</p>\r\n                <div className=\"col-6 text-center\">\r\n                    <h5 className=\"\">{titulo}</h5>\r\n                    <p className=\"\">{contenido}</p>\r\n                </div>\r\n                <div className=\"col-4 text-center\">\r\n                    <Link to={'/ver-tarea'} onClick={ () => this.props.mostrarPost(_id) } className=\"mr-1 mb-1 btn btn-primary\">Ver</Link>\r\n                    <Link to={'/editar-tarea'} onClick={ () => this.props.mostrarPost(_id) } className=\"mr-1 mb-1 btn btn-info\">Editar</Link>\r\n                    <button onClick={ () => this.props.borrarPost(_id) } className=\"mr-1 mb-1 btn btn-danger\">Borrar &times;</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Post;","import React, {Component} from 'react';\r\nimport Post from './Post';\r\n\r\nclass ContenedorPosts extends Component {\r\n    render() {\r\n        let posts = this.props.posts;\r\n        return (\r\n            <div className=\"col-12 p-4\">\r\n                {\r\n                    Object.keys(posts).map( (res, index) => (\r\n                        <Post \r\n                            key={index}\r\n                            post={posts[res]}\r\n                            id={index}\r\n                            mostrarPost={this.props.mostrarPost}\r\n                            borrarPost={this.props.borrarPost}\r\n                        />\r\n                    ) )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContenedorPosts;","import React, {Component} from 'react';\r\n\r\nimport Header from './Header';\r\nimport Categoria from './Categoria';\r\nimport ContenedorPosts from './ContenedorPosts';\r\n\r\n\r\nclass Inicio extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                <Header />\r\n                <Categoria />\r\n                <ContenedorPosts \r\n                    posts={this.props.tareas}\r\n                    mostrarPost={this.props.mostrarPost}\r\n                    borrarPost={this.props.borrarPost}\r\n                />\r\n\r\n            </React.Fragment>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Inicio ;","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"col-12 my-3 p-1 verPost\">\r\n            <h2 className=\"text-center\">Nueva tarea por realizar</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ContenidoPost extends Component {\r\n    render() {\r\n        let {titulo, contenido} = this.props.verPost;\r\n        return (\r\n\r\n            <div className=\"ver-post col-11 col-md-9 col-lg-7\">\r\n\r\n                <div className=\"ver-titulo row mb-2\">\r\n                    <h5 className=\"col-12 my-2\">{titulo}</h5>\r\n                </div>\r\n                <div className=\"ver-contenido row mb-2\">\r\n                    <p className=\"col-10 p-3\">{contenido}</p>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Link to={\"/\"} className=\"btn btn-success\">&larr; Volver</Link>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContenidoPost;","import React, {Component} from 'react';\r\n\r\nimport Header from './Header';\r\nimport ContenidoPost from './ContenidoPost';\r\n\r\nclass MostrarPost extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <ContenidoPost \r\n                    verPost={this.props.verPost}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MostrarPost;","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"col-12 my-3 p-1 verPost\">\r\n            <h2 className=\"text-center\">Crear Nueva Tarea</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import Swal from 'sweetalert2';\r\n\r\nclass ContenidoPost extends Component {\r\n\r\n    tituloRef = React.createRef();\r\n    contenidoRef = React.createRef();\r\n    state = {\r\n        mensaje: \"\"\r\n    }\r\n\r\n    crearTarea = (e) => {\r\n        e.preventDefault();\r\n\r\n        const post = {\r\n            titulo: this.tituloRef.current.value,\r\n            contenido: this.contenidoRef.current.value\r\n        }\r\n\r\n        if (post.titulo === '' || post.contenido === '') {\r\n            \r\n            this.setState({\r\n                mensaje: \"Todos los campos son obligarios\"\r\n            });\r\n\r\n            setTimeout( () => {\r\n                this.setState({\r\n                    mensaje: \"\"\r\n                });\r\n            },1500);\r\n            return;\r\n            \r\n        }\r\n\r\n        this.props.crearPost(post);\r\n        // console.log(this.props.ok);\r\n        \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <form onSubmit={this.crearTarea}>\r\n                <div className=\"col-11 col-md-8 col-lg-9 form-group\">\r\n                    <label className=\"form-control-label\">Titulo de la Tarea</label>\r\n                    <input type=\"text\" ref={this.tituloRef} className=\"form-control form-control-success\" name=\"Titulo\" placeholder=\"Nombre de la tarea\"/>\r\n                </div>\r\n                <div className=\"col-11 col-md-8 col-lg-9 form-group\">\r\n                    <label className=\"form-control-label\">Descripcion de la Tarea</label>\r\n                    <textarea ref={this.contenidoRef} className=\"form-control form-control-danger\" name=\"nombre\" placeholder=\"Descripcion de la tarea\"></textarea>\r\n                </div>\r\n                { this.state.mensaje ? <div className=\"col-11 form-group alert alert-danger text-center\">{this.state.mensaje}</div> : ''}\r\n                <div className=\"col-12 col-md-8 col-lg-9 form-group justify-content-between d-flex\">\r\n                    <Link to={'/'} className=\"btn btn-info \">&larr; Ver Tareas</Link>\r\n                    <button type=\"submit\" className=\"btn btn-success\">Crear Tarea</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContenidoPost;","import React, {Component} from 'react';\r\nimport Header from './Header';\r\nimport ContenidoPost from './ContenidoPost';\r\n\r\n\r\nclass CrearPost extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Header />\r\n                <ContenidoPost\r\n                    crearPost={this.props.crearPost}\r\n                    \r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CrearPost;","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"col-12 my-3 p-1 verPost\">\r\n            <h2 className=\"text-center\">Editar Tarea</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ContenidoPost extends Component {\r\n\r\n    tituloRef = React.createRef();\r\n    contenidoRef = React.createRef();\r\n    state = {\r\n        mensaje: ''\r\n    }\r\n    editarTarea = (e) => {\r\n        e.preventDefault();\r\n\r\n        const post = {\r\n            titulo: this.tituloRef.current.value,\r\n            contenido: this.contenidoRef.current.value\r\n        }\r\n\r\n        if (post.titulo === '' || post.contenido === '') {\r\n            \r\n            this.setState({\r\n                mensaje: \"Todos los campos son obligarios\"\r\n            });\r\n\r\n            setTimeout( () => {\r\n                this.setState({\r\n                    mensaje: \"\"\r\n                });\r\n            },1500);\r\n            return;\r\n            \r\n        }\r\n        const { _id } = this.props.verPost;\r\n        this.props.editarPost(_id, post);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { titulo, contenido } = this.props.verPost;\r\n        return (\r\n            <form onSubmit={this.editarTarea}>\r\n                <div className=\"col-11 col-md-8 col-lg-9 form-group\">\r\n                    <label className=\"form-control-label\">Titulo de la Tarea</label>\r\n                    <input type=\"text\" ref={this.tituloRef} className=\"form-control form-control-success\" defaultValue={titulo} name=\"Titulo\" />\r\n                </div>\r\n                <div className=\"col-11 col-md-8 col-lg-9 form-group\">\r\n                    <label className=\"form-control-label\">Descripcion de la Tarea</label>\r\n                    <textarea ref={this.contenidoRef} className=\"form-control form-control-danger\" defaultValue={contenido} name=\"nombre\" ></textarea>\r\n                </div>\r\n                { this.state.mensaje ? <div className=\"col-8 form-group alert alert-danger text-center\">{this.state.mensaje}</div> : ''}\r\n                <div className=\"col-12 col-md-8 col-lg-9 form-group justify-content-between d-flex\">\r\n                    <Link to={'/'} className=\" btn btn-info \">&larr; Ver Tareas</Link>\r\n                    <button type=\"submit\" className=\"btn btn-success ml-1\">Guardar cambios</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContenidoPost;","import React, {Component} from 'react';\r\nimport Header from './Header';\r\nimport ContenidoPost from './ContenidoPost';\r\n\r\n\r\nclass EditarPost extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Header />\r\n                <ContenidoPost\r\n                    editarPost={this.props.editarPost}\r\n                    verPost={this.props.verPost}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default EditarPost;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"col-12 mt-4\">\r\n            <p className=\"text-center m-0 p-1\">&copy; Derechos Reservados Autor Keyberth Rengel - CRUD de Tareas</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport  { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\n//Rutas\r\nimport Inicio from './inicio/Inicio';\r\nimport MostrarPost from './ver-post/MostrarPost';\r\nimport CrearPost from './crear-post/CrearPost';\r\nimport EditarPost from './editar-post/EditarPost';\r\nimport Footer from './footer/Footer';\r\n\r\nclass Router extends Component {\r\n\r\n    state = {\r\n        tareas: [],\r\n        verPost: []\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const post = localStorage.getItem(\"VerPost\");\r\n            if(post){\r\n                this.setState({\r\n                    verPost: JSON.parse(post)\r\n                });\r\n            }\r\n        this.obtenerPosts();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n        this.obtenerPosts();\r\n    }\r\n    \r\n    // ================\r\n    // obtener todos los posts\r\n    // ================\r\n    obtenerPosts = () => {\r\n        axios.get('https://crud-node-tareas.herokuapp.com/posts')\r\n        // axios.get('http://localhost:5500/posts')\r\n        .then( res => {\r\n        //    console.log(res.data);\r\n            this.setState({\r\n                tareas: res.data.posts\r\n            })\r\n        } )\r\n        .catch( error => {\r\n            console.log(error);\r\n        } );\r\n    }\r\n    \r\n    // ================\r\n    // crear un nuevo post\r\n    // ================\r\n    crearPost = (post) => {\r\n        // axios.post('https://crud-node-tareas.herokuapp.com/post/create', post)\r\n        axios.post('http://localhost:5500/post/create', post)\r\n        .then( res => {\r\n           console.log(res.data.ok)\r\n\r\n            if(res.data.ok === true){\r\n\r\n                Swal.fire({\r\n                    position: 'top-end',\r\n                    type: 'success',\r\n                    title: 'Se creo correctamente la tarea',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                });\r\n\r\n                this.setState({\r\n                    tareas: res.data.posts,\r\n                    ok: res.data.ok\r\n                })\r\n            }\r\n        } )\r\n        .catch( error => {\r\n            console.log(error);\r\n        } );\r\n\r\n        // console.log(post);\r\n    }\r\n    \r\n    // ================\r\n    // Editar post\r\n    // ================\r\n    editarPost = (id, post) => {\r\n\r\n        axios.put(`https://crud-node-tareas.herokuapp.com/post/update/${id}`, post)\r\n        // axios.put(`http://localhost:5500/post/update/${id}`, post)\r\n        .then( res => {\r\n            if (res.data.ok === true ) {\r\n                Swal.fire({\r\n                    position: 'top-end',\r\n                    type: 'success',\r\n                    title: 'Se guardaron los cambios correctamente',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                });\r\n                \r\n            }\r\n\r\n        } )\r\n        .catch( error => {\r\n            console.log(error);\r\n        } );\r\n    }\r\n\r\n    // ================\r\n    // Borrar post\r\n    // ================\r\n    borrarPost = (id) => {\r\n    \r\n        Swal.fire({\r\n            title: 'Estas seguro?',\r\n            text: \"Esta acción no se puede deshacer!\",\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Si, borrar!',\r\n            cancelButtonText : 'Cancelar'\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                axios.delete(`https://crud-node-tareas.herokuapp.com/post/delete/${id}`)\r\n                // axios.delete(`http://localhost:5500/post/delete/${id}`)\r\n                    .then( res => {\r\n                        if (res.data.ok === true ) {\r\n                            Swal.fire(\r\n                                'Eliminado!',\r\n                                'El producto ha sido eliminado.',\r\n                                'success'\r\n                            )\r\n                        }\r\n                    } )\r\n                    .catch( error => {\r\n                        console.log(error);\r\n                    } );\r\n                \r\n            }\r\n        })\r\n    }\r\n    \r\n    // ================\r\n    // mostrar post\r\n    // ================\r\n    mostrarPost = (id) => {\r\n        const tareas = [...this.state.tareas];\r\n        \r\n        let post = tareas.filter( data => (\r\n            data._id === id\r\n        ) );\r\n    \r\n        this.setState({\r\n            verPost: post[0]\r\n        });\r\n        localStorage.setItem(\r\n            \"VerPost\",\r\n            JSON.stringify(post[0])\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <div className=\"container\">\r\n                    <Redirect to=\"/\" />\r\n                    <Switch>\r\n\r\n                        <Route exact path={'/'} render = { () => (\r\n                            <Inicio\r\n                                tareas={this.state.tareas}\r\n                                mostrarPost={this.mostrarPost}\r\n                                borrarPost={this.borrarPost}\r\n                            />\r\n                        )}/>\r\n                        <Route exact path={'/ver-tarea'} render = { () => (\r\n                            <MostrarPost \r\n                                verPost={this.state.verPost}\r\n                            />\r\n                        )}/>\r\n                        <Route exact path={'/crear-tarea'} render = { () => (\r\n                            <CrearPost \r\n                                crearPost={this.crearPost}\r\n                                \r\n                            />\r\n                        )}/>\r\n                        <Route exact path={'/editar-tarea'} render = { () => (\r\n                            <EditarPost \r\n                                editarPost={this.editarPost}\r\n                                verPost={this.state.verPost}\r\n                            />\r\n                        )}/>\r\n\r\n                    </Switch>\r\n\r\n                </div>\r\n            <Footer />\r\n            \r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Router;","import React from 'react';\nimport Router from './componentes/Router';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Router />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}